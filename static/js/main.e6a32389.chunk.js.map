{"version":3,"sources":["hooks/useInputState.js","reducers/todosReducer.js","contexts/TodosContext.js","hooks/useLocalStorageReducer.js","EditingForm.js","TodoItem.js","hooks/useToggleState.js","TodoList.js","TodoForm.js","TodoApp.js","App.js","index.js"],"names":["useInputState","initialValue","_useState","useState","_useState2","Object","slicedToArray","value","setValue","_ref","target","todosReducer","todos","action","type","concat","toConsumableArray","id","uuid","task","newTask","completed","filter","todo","map","objectSpread","initialTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","_useLocalStorageReduc","key","defaultValue","reducer","_useReducer","useReducer","JSON","parse","window","localStorage","getItem","stringify","error","_useReducer2","state","dispatch","useEffect","setItem","useLocalStorageReducer","_useLocalStorageReduc2","react_default","a","createElement","Provider","children","EditingForm","toggleIsEditing","useContext","_useInputState","_useInputState2","updateValue","resetValue","onSubmit","evt","preventDefault","style","marginLeft","width","TextField","onChange","margin","fullWidth","autoFocus","memo","console","log","_useToggleState","arguments","length","undefined","setState","useToggleState","_useToggleState2","isEditing","listItem","Fragment","Checkbox","checked","disableRipple","tabIndex","onClick","ListItemText","textDecoration","ListItem","height","src_EditingForm","ListItemSecondaryAction","IconButton","aria-label","Delete_default","Edit_default","TodoList","Paper","List","index","react","src_TodoItem","Divider","TodoForm","updateNewTask","resetNewTask","padding","label","TodoApp","backgroundColor","elevation","AppBar","color","position","Toolbar","Typography","Grid","container","justify","marginTop","item","xs","md","lg","TodosContext_TodosProvider","src_TodoForm","src_TodoList","App","src_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e6a32389.chunk.js","sourcesContent":["import { useState } from 'react';\r\nexport default initialValue => {\r\n  const [ value, setValue ] = useState(initialValue);\r\n  const updateValue = ({ target }) => {\r\n    setValue(target.value)\r\n  };\r\n  const resetValue = () => {\r\n    setValue(\"\");\r\n  };\r\n\r\n  return [value, updateValue, resetValue];\r\n}","import uuid from \"uuid/v4\";\r\n\r\nconst todosReducer = (todos, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return [...todos, { id: uuid(), task: action.newTask, completed: false }];\r\n    case \"REMOVE\":\r\n      return todos.filter(todo => todo.id !== action.id);\r\n    case \"TOGGLE_COMPLETED\":\r\n      return todos.map(todo =>\r\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n    case \"UPDATE\":\r\n      return todos.map(todo =>\r\n        todo.id === action.id ? { ...todo, task: action.newTask } : todo\r\n      );\r\n    default:\r\n      return todos;\r\n  }\r\n};\r\n\r\nexport default todosReducer;\r\n","import React, { createContext } from \"react\";\r\nimport useLocalStorageReducer from \"../hooks/useLocalStorageReducer\";\r\nimport todosReducer from \"../reducers/todosReducer\";\r\n\r\nconst initialTodos = [];\r\n\r\nconst TodosContext = createContext();\r\nconst DispatchContext = createContext();\r\n\r\nconst TodosProvider = props => {\r\n  const [todos, dispatch] = useLocalStorageReducer('todos', initialTodos, todosReducer);\r\n\r\n  return (\r\n    <TodosContext.Provider value={todos}>\r\n      <DispatchContext.Provider value={dispatch}>\r\n        {props.children}\r\n      </DispatchContext.Provider>\r\n    </TodosContext.Provider>\r\n  );\r\n};\r\n\r\nexport { TodosContext, DispatchContext, TodosProvider };\r\n","import { useReducer, useEffect } from \"react\";\r\n\r\nexport default (key, defaultValue, reducer) => {\r\n  const [state, dispatch] = useReducer(reducer, defaultValue, () => {\r\n    let value;\r\n    try {\r\n      value = JSON.parse(\r\n        window.localStorage.getItem(key) || JSON.stringify(defaultValue)\r\n      );\r\n    } catch (error) {\r\n      value = defaultValue;\r\n    }\r\n\r\n    return value;\r\n  });\r\n\r\n  const updateLocalStorage = () => {\r\n    try {\r\n      window.localStorage.setItem(key, JSON.stringify(state));\r\n    } catch(error) {\r\n\r\n    }\r\n  };\r\n\r\n  useEffect(updateLocalStorage, [state]);\r\n\r\n  return [state, dispatch];\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { DispatchContext } from \"./contexts/TodosContext\";\r\n\r\nconst EditingForm = ({ id, task, toggleIsEditing }) => {\r\n  const dispatch = useContext(DispatchContext);\r\n  const [value, updateValue, resetValue] = useInputState(task);\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    dispatch({\r\n      type: \"UPDATE\",\r\n      id,\r\n      newTask: value\r\n    });\r\n    resetValue();\r\n    toggleIsEditing();\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      style={{\r\n        marginLeft: \"1rem\",\r\n        width: \"60%\"\r\n      }}\r\n    >\r\n      <TextField\r\n        value={value}\r\n        onChange={updateValue}\r\n        margin=\"normal\"\r\n        fullWidth\r\n        autoFocus\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditingForm;\r\n","import React, { useContext, memo } from \"react\";\r\nimport useToggleState from \"./hooks/useToggleState\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport EditingForm from \"./EditingForm\";\r\nimport { DispatchContext } from \"./contexts/TodosContext\";\r\n\r\nconst TodoItem = ({ id, task, completed }) => {\r\n  console.log('render: ', task);\r\n  const dispatch = useContext(DispatchContext);\r\n  const [isEditing, toggleIsEditing] = useToggleState();\r\n  const listItem = (\r\n    <>\r\n      <Checkbox\r\n        checked={completed}\r\n        disableRipple\r\n        tabIndex={-1}\r\n        onClick={() =>\r\n          dispatch({\r\n            type: \"TOGGLE_COMPLETED\",\r\n            id\r\n          })\r\n        }\r\n      />\r\n      <ListItemText\r\n        style={{\r\n          textDecoration: completed ? \"line-through\" : \"none\"\r\n        }}\r\n      >\r\n        {task}\r\n      </ListItemText>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <ListItem style={{ height: \"64px\" }}>\r\n      {isEditing ? (\r\n        <EditingForm id={id} task={task} toggleIsEditing={toggleIsEditing} />\r\n      ) : (\r\n        listItem\r\n      )}\r\n      <ListItemSecondaryAction>\r\n        <IconButton\r\n          aria-label=\"Delete\"\r\n          onClick={() =>\r\n            dispatch({\r\n              type: \"REMOVE\",\r\n              id\r\n            })\r\n          }\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"Edit\" onClick={toggleIsEditing}>\r\n          <EditIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default memo(TodoItem);\r\n","import { useState } from 'react';\r\nexport default (initialValue = false) => {\r\n  const [ state, setState ] = useState(initialValue);\r\n  const toggle = () => {\r\n    setState(!state);\r\n  };\r\n\r\n  return [state, toggle];\r\n}","import React, { Fragment, useContext } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nimport TodoItem from \"./TodoItem\";\r\nimport { TodosContext } from \"./contexts/TodosContext\";\r\n\r\nconst TodoList = () => {\r\n  const todos = useContext(TodosContext);\r\n\r\n  if (todos.length === 0) return null;\r\n  \r\n  return (\r\n    <Paper>\r\n      <List>\r\n        {todos.map((todo, index) => (\r\n          <Fragment key={todo.id}>\r\n            <TodoItem\r\n              {...todo}\r\n            />\r\n            {index < todos.length - 1 && <Divider />}\r\n          </Fragment>\r\n        ))}\r\n      </List>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useContext } from \"react\";\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { DispatchContext } from \"./contexts/TodosContext\";\r\n\r\nconst TodoForm = () => {\r\n  const dispatch = useContext(DispatchContext);\r\n  const [newTask, updateNewTask, resetNewTask] = useInputState(\"\");\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    dispatch({\r\n      type: \"ADD\",\r\n      newTask\r\n    });\r\n    resetNewTask();\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        margin: \"1rem 0\",\r\n        padding: \"0 1rem\"\r\n      }}\r\n    >\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          value={newTask}\r\n          onChange={updateNewTask}\r\n          margin=\"normal\"\r\n          label=\"Add New Todo\"\r\n          fullWidth\r\n        />\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nimport { TodosProvider } from \"./contexts/TodosContext\";\r\n\r\nconst TodoApp = () => {\r\n  return (\r\n    <Paper\r\n      style={{\r\n        padding: 0,\r\n        margin: 0,\r\n        height: \"100vh\",\r\n        backgroundColor: \"#fafafa\"\r\n      }}\r\n      elevation={0}\r\n    >\r\n      <AppBar color=\"primary\" position=\"static\" style={{ height: \"64px\" }}>\r\n        <Toolbar>\r\n          <Typography color=\"inherit\">Todos with Hooks</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        style={{\r\n          marginTop: \"1rem\"\r\n        }}\r\n      >\r\n        <Grid item xs={11} md={8} lg={4}>\r\n          <TodosProvider>\r\n            <TodoForm />\r\n            <TodoList />\r\n          </TodosProvider>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n","import React from \"react\";\nimport TodoApp from \"./TodoApp\";\n\nfunction App() {\n  return <TodoApp />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}